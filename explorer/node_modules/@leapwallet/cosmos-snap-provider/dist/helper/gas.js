"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.toSmall = exports.getGasPriceForChainName = void 0;
/* eslint jsdoc/require-description: 0 */ // --> OFF
/* eslint jsdoc/require-param-description: 0 */ // --> OFF
/* eslint jsdoc/require-returns: 0 */ // --> OFF
const bignumber_js_1 = __importDefault(require("bignumber.js"));
const defaultDecimals = 6;
const getGasPriceForChainName = async (chainName, gasLevel = 'average') => {
    var _a;
    const gasPriceRegistry = await fetch('https://assets.leapwallet.io/cosmos-registry/v1/gas/gas-prices.json');
    if (!gasPriceRegistry.ok) {
        throw new Error(`Failed to get Gas price ${gasPriceRegistry.status}`);
    }
    const gasPrices = await gasPriceRegistry.json();
    console.log(gasPrices, chainName, gasLevel);
    return (_a = gasPrices === null || gasPrices === void 0 ? void 0 : gasPrices[chainName]) === null || _a === void 0 ? void 0 : _a[gasLevel];
};
exports.getGasPriceForChainName = getGasPriceForChainName;
/**
 *
 * @param quantity
 * @param decimals
 */
function toSmall(quantity, decimals = defaultDecimals) {
    return new bignumber_js_1.default(quantity).times(Math.pow(10, decimals)).toFixed().toString();
}
exports.toSmall = toSmall;
//# sourceMappingURL=gas.js.map