{
  "version": 3,
  "sources": ["../../shiki/dist/langs/shellscript.mjs"],
  "sourcesContent": ["const lang = Object.freeze({ \"displayName\": \"Shell\", \"name\": \"shellscript\", \"patterns\": [{ \"include\": \"#initial_context\" }], \"repository\": { \"alias_statement\": { \"begin\": \"(alias)[ \\\\t]*+[ \\\\t]*+(?:((?<=^|;|&|[ \\\\t])(?:readonly|declare|typeset|export|local)(?=[ \\\\t]|;|&|$))[ \\\\t]*+)?((?<!\\\\w)[a-zA-Z_0-9-]+(?!\\\\w))(?:(\\\\[)((?:(?:(?:\\\\$)?(?<!\\\\w)[a-zA-Z_0-9-]+(?!\\\\w)|@)|\\\\*))(\\\\]))?(?:(?:(\\\\=)|(\\\\+\\\\=))|(\\\\-\\\\=))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.alias.shell\" }, \"2\": { \"name\": \"storage.modifier.$2.shell\" }, \"3\": { \"name\": \"variable.other.assignment.shell\" }, \"4\": { \"name\": \"punctuation.definition.array.access.shell\" }, \"5\": { \"name\": \"variable.other.assignment.shell\" }, \"6\": { \"name\": \"punctuation.definition.array.access.shell\" }, \"7\": { \"name\": \"keyword.operator.assignment.shell\" }, \"8\": { \"name\": \"keyword.operator.assignment.compound.shell\" }, \"9\": { \"name\": \"keyword.operator.assignment.compound.shell\" } }, \"end\": \"(?:(?= |\\\\t|$)|(?:(?:(?:(?:(;)|(&&))|(\\\\|\\\\|))|(&))|\\\\n))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.statement.semicolon.shell\" }, \"2\": { \"name\": \"punctuation.separator.statement.and.shell\" }, \"3\": { \"name\": \"punctuation.separator.statement.or.shell\" }, \"4\": { \"name\": \"punctuation.separator.statement.background.shell\" } }, \"name\": \"meta.expression.assignment.shell\", \"patterns\": [{ \"include\": \"#normal_statement_context\" }] }, \"argument\": { \"begin\": \"[ \\\\t]++(?!(?:&|\\\\||\\\\(|\\\\[|#|\\\\n|$|;))\", \"beginCaptures\": {}, \"end\": \"(?= |\\\\t|;|\\\\||&|$|\\\\n|\\\\)|\\\\`)\", \"endCaptures\": {}, \"name\": \"meta.argument.shell\", \"patterns\": [{ \"include\": \"#argument_context\" }, { \"include\": \"#line_continuation\" }] }, \"argument_context\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"string.unquoted.argument.shell\", \"patterns\": [{ \"match\": \"\\\\*\", \"name\": \"variable.language.special.wildcard.shell\" }, { \"include\": \"#variable\" }, { \"include\": \"#numeric_literal\" }, { \"captures\": { \"1\": { \"name\": \"constant.language.$1.shell\" } }, \"match\": \"(?<!\\\\w)(\\\\b(?:true|false)\\\\b)(?!\\\\w)\" }] } }, \"match\": \"[ \\\\t]*+([^\\n'&;<>\\\\(\\\\)\\\\$`\\\\\\\\\\\"\\\\|]+(?!>))\" }, { \"include\": \"#normal_statement_context\" }] }, \"assignment\": { \"patterns\": [{ \"begin\": \"[ \\\\t]*+(?:((?<=^|;|&|[ \\\\t])(?:readonly|declare|typeset|export|local)(?=[ \\\\t]|;|&|$))[ \\\\t]*+)?((?<!\\\\w)[a-zA-Z_0-9-]+(?!\\\\w))(?:(\\\\[)((?:(?:(?:\\\\$)?(?<!\\\\w)[a-zA-Z_0-9-]+(?!\\\\w)|@)|\\\\*))(\\\\]))?(?:(?:(\\\\=)|(\\\\+\\\\=))|(\\\\-\\\\=))[ \\\\t]*+(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.$1.shell\" }, \"2\": { \"name\": \"variable.other.assignment.shell\" }, \"3\": { \"name\": \"punctuation.definition.array.access.shell\" }, \"4\": { \"name\": \"variable.other.assignment.shell\" }, \"5\": { \"name\": \"punctuation.definition.array.access.shell\" }, \"6\": { \"name\": \"keyword.operator.assignment.shell\" }, \"7\": { \"name\": \"keyword.operator.assignment.compound.shell\" }, \"8\": { \"name\": \"keyword.operator.assignment.compound.shell\" }, \"9\": { \"name\": \"punctuation.shell\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.shell\" } }, \"name\": \"meta.expression.assignment.shell\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#argument_context\" }] }, { \"begin\": \"[ \\\\t]*+(?:((?<=^|;|&|[ \\\\t])(?:readonly|declare|typeset|export|local)(?=[ \\\\t]|;|&|$))[ \\\\t]*+)?((?<!\\\\w)[a-zA-Z_0-9-]+(?!\\\\w))(?:(\\\\[)((?:(?:(?:\\\\$)?(?<!\\\\w)[a-zA-Z_0-9-]+(?!\\\\w)|@)|\\\\*))(\\\\]))?(?:(?:(\\\\=)|(\\\\+\\\\=))|(\\\\-\\\\=))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.$1.shell\" }, \"2\": { \"name\": \"variable.other.assignment.shell\" }, \"3\": { \"name\": \"punctuation.definition.array.access.shell\" }, \"4\": { \"name\": \"variable.other.assignment.shell\" }, \"5\": { \"name\": \"punctuation.definition.array.access.shell\" }, \"6\": { \"name\": \"keyword.operator.assignment.shell\" }, \"7\": { \"name\": \"keyword.operator.assignment.compound.shell\" }, \"8\": { \"name\": \"keyword.operator.assignment.compound.shell\" } }, \"end\": \"(?:(?= |\\\\t|$)|(?:(?:(?:(?:(;)|(&&))|(\\\\|\\\\|))|(&))|\\\\n))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.statement.semicolon.shell\" }, \"2\": { \"name\": \"punctuation.separator.statement.and.shell\" }, \"3\": { \"name\": \"punctuation.separator.statement.or.shell\" }, \"4\": { \"name\": \"punctuation.separator.statement.background.shell\" } }, \"name\": \"meta.expression.assignment.shell\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#argument_context\" }] }] }, \"basic_command_name\": { \"captures\": { \"1\": { \"name\": \"storage.modifier.$1.shell\" }, \"2\": { \"name\": \"entity.name.function.call.shell entity.name.command.shell\", \"patterns\": [{ \"match\": \"(?<!\\\\w)(?:continue|return|break)(?!\\\\w)\", \"name\": \"keyword.control.$0.shell\" }, { \"match\": \"(?<!\\\\w)(?:unfunction|continue|autoload|unsetopt|bindkey|builtin|getopts|command|declare|unalias|history|unlimit|typeset|suspend|source|printf|unhash|disown|ulimit|return|which|alias|break|false|print|shift|times|umask|umask|unset|read|type|exec|eval|wait|echo|dirs|jobs|kill|hash|stat|exit|test|trap|true|let|set|pwd|cd|fg|bg|fc|:|\\\\.)(?!\\\\/)(?!\\\\w)\", \"name\": \"support.function.builtin.shell\" }, { \"include\": \"#variable\" }] } }, \"match\": `(?!(?:!|&|\\\\||\\\\(|\\\\)|\\\\{|\\\\[|<|>|#|\\\\n|$|;|[ \\\\t]))(?!foreach\\\\b(?!\\\\/)|select\\\\b(?!\\\\/)|repeat\\\\b(?!\\\\/)|until\\\\b(?!\\\\/)|while\\\\b(?!\\\\/)|case\\\\b(?!\\\\/)|done\\\\b(?!\\\\/)|elif\\\\b(?!\\\\/)|else\\\\b(?!\\\\/)|esac\\\\b(?!\\\\/)|then\\\\b(?!\\\\/)|for\\\\b(?!\\\\/)|end\\\\b(?!\\\\/)|in\\\\b(?!\\\\/)|fi\\\\b(?!\\\\/)|do\\\\b(?!\\\\/)|if\\\\b(?!\\\\/))(?:((?<=^|;|&|[ \\\\t])(?:readonly|declare|typeset|export|local)(?=[ \\\\t]|;|&|$))|((?!\"|'|\\\\\\\\\\\\n?$)[^!'\" \\\\t\\\\n\\\\r]+?))(?:(?= |\\\\t)|(?=;|\\\\||&|\\\\n|\\\\)|\\\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\))`, \"name\": \"meta.statement.command.name.basic.shell\" }, \"block_comment\": { \"begin\": \"\\\\s*+(\\\\/\\\\*)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.begin.shell\" } }, \"end\": \"\\\\*\\\\/\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.end.shell\" } }, \"name\": \"comment.block.shell\" }, \"boolean\": { \"match\": \"\\\\b(?:true|false)\\\\b\", \"name\": \"constant.language.$0.shell\" }, \"case-clause\": { \"patterns\": [{ \"begin\": \"(?=\\\\S)\", \"end\": \";;&?|;&\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.case-clause.shell\" } }, \"name\": \"meta.scope.case-clause.shell\", \"patterns\": [{ \"begin\": \"\\\\(|(?=\\\\S)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.case-pattern.shell\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.case-pattern.shell\" } }, \"name\": \"meta.scope.case-pattern.shell\", \"patterns\": [{ \"match\": \"\\\\|\", \"name\": \"punctuation.separator.pipe-sign.shell\" }, { \"include\": \"#string\" }, { \"include\": \"#variable\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#pathname\" }] }, { \"begin\": \"(?<=\\\\))\", \"end\": \"(?=;;&?|;&)\", \"name\": \"meta.scope.case-clause-body.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }] }] }, \"comment\": { \"captures\": { \"1\": { \"name\": \"comment.line.number-sign.shell meta.shebang.shell\" }, \"2\": { \"name\": \"punctuation.definition.comment.shebang.shell\" }, \"3\": { \"name\": \"comment.line.number-sign.shell\" }, \"4\": { \"name\": \"punctuation.definition.comment.shell\" } }, \"match\": \"(?:^|[ \\\\t]++)(?:((#!).*)|((#).*))\" }, \"comments\": { \"patterns\": [{ \"include\": \"#block_comment\" }, { \"include\": \"#line_comment\" }] }, \"compound-command\": { \"patterns\": [{ \"begin\": \"\\\\[{1,2}\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.logical-expression.shell\" } }, \"end\": \"\\\\]{1,2}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.logical-expression.shell\" } }, \"name\": \"meta.scope.logical-expression.shell\", \"patterns\": [{ \"include\": \"#logical-expression\" }, { \"include\": \"#initial_context\" }] }, { \"begin\": \"\\\\({2}\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.shell\" } }, \"end\": \"\\\\){2}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.shell\" } }, \"name\": \"string.other.math.shell\", \"patterns\": [{ \"include\": \"#math\" }] }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.subshell.shell\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.subshell.shell\" } }, \"name\": \"meta.scope.subshell.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }, { \"begin\": \"(?<=\\\\s|^){(?=\\\\s|$)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.shell\" } }, \"end\": \"(?<=^|;)\\\\s*(})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.shell\" } }, \"name\": \"meta.scope.group.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }] }, \"continuation_of_double_quoted_command_name\": { \"begin\": '\\\\G(?<=\")', \"beginCaptures\": {}, \"contentName\": \"meta.statement.command.name.continuation string.quoted.double entity.name.function.call entity.name.command\", \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"string.quoted.double.shell punctuation.definition.string.end.shell entity.name.function.call.shell entity.name.command.shell\" } }, \"patterns\": [{ \"match\": '\\\\\\\\[\\\\$\\\\n`\"\\\\\\\\]', \"name\": \"constant.character.escape.shell\" }, { \"include\": \"#variable\" }, { \"include\": \"#interpolation\" }] }, \"continuation_of_single_quoted_command_name\": { \"begin\": \"\\\\G(?<=')\", \"beginCaptures\": {}, \"contentName\": \"meta.statement.command.name.continuation string.quoted.single entity.name.function.call entity.name.command\", \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"string.quoted.single.shell punctuation.definition.string.end.shell entity.name.function.call.shell entity.name.command.shell\" } } }, \"custom_command_names\": { \"patterns\": [] }, \"custom_commands\": { \"patterns\": [] }, \"double_quote_context\": { \"patterns\": [{ \"match\": '\\\\\\\\[\\\\$`\"\\\\\\\\\\\\n]', \"name\": \"constant.character.escape.shell\" }, { \"include\": \"#variable\" }, { \"include\": \"#interpolation\" }] }, \"double_quote_escape_char\": { \"match\": '\\\\\\\\[\\\\$`\"\\\\\\\\\\\\n]', \"name\": \"constant.character.escape.shell\" }, \"function_definition\": { \"applyEndPatternLast\": 1, \"begin\": \"[ \\\\t]*+(?:(\\\\bfunction\\\\b)[ \\\\t]*+([^ \\\\t\\\\n\\\\r\\\\(\\\\)=]+)(?:(\\\\()[ \\\\t]*+(\\\\)))?|([^ \\\\t\\\\n\\\\r\\\\(\\\\)=]+)[ \\\\t]*+(\\\\()[ \\\\t]*+(\\\\)))\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.function.shell\" }, \"2\": { \"name\": \"entity.name.function.shell\" }, \"3\": { \"name\": \"punctuation.definition.arguments.shell\" }, \"4\": { \"name\": \"punctuation.definition.arguments.shell\" }, \"5\": { \"name\": \"entity.name.function.shell\" }, \"6\": { \"name\": \"punctuation.definition.arguments.shell\" }, \"7\": { \"name\": \"punctuation.definition.arguments.shell\" } }, \"end\": \"(?<=\\\\}|\\\\))\", \"endCaptures\": {}, \"name\": \"meta.function.shell\", \"patterns\": [{ \"match\": \"\\\\G(?:\\\\t| |\\\\n)\" }, { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.shell punctuation.section.function.definition.shell\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.shell punctuation.section.function.definition.shell\" } }, \"name\": \"meta.function.body.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }, { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.shell punctuation.section.function.definition.shell\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.shell punctuation.section.function.definition.shell\" } }, \"name\": \"meta.function.body.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }] }, \"heredoc\": { \"patterns\": [{ \"begin\": `((?<!<)<<-)[ \\\\t]*+(\"|')[ \\\\t]*+((?<!\\\\w)[a-zA-Z_0-9-]+(?!\\\\w))(?=\\\\s|;|&|<|\"|')(?:\\\\2)(.*)`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.heredoc.shell\" }, \"2\": {}, \"3\": { \"name\": \"punctuation.definition.string.heredoc.shell\" }, \"4\": { \"patterns\": [{ \"include\": \"#normal_statement_context\" }] } }, \"contentName\": \"string.quoted.heredoc.indent\", \"end\": \"^\\\\t*(?:\\\\3)(?=\\\\s|;|&|$)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.heredoc.shell\" } }, \"patterns\": [] }, { \"begin\": `((?<!<)<<(?!<))[ \\\\t]*+(\"|')[ \\\\t]*+((?<!\\\\w)[a-zA-Z_0-9-]+(?!\\\\w))(?=\\\\s|;|&|<|\"|')(?:\\\\2)(.*)`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.heredoc.shell\" }, \"2\": {}, \"3\": { \"name\": \"punctuation.definition.string.heredoc.shell\" }, \"4\": { \"patterns\": [{ \"include\": \"#normal_statement_context\" }] } }, \"contentName\": \"string.quoted.heredoc.no-indent\", \"end\": \"^(?:\\\\3)(?=\\\\s|;|&|$)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.heredoc.shell\" } }, \"patterns\": [] }, { \"begin\": `((?<!<)<<-)[ \\\\t]*+((?<!\\\\w)[a-zA-Z_0-9-]+(?!\\\\w))(?=\\\\s|;|&|<|\"|')(.*)`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.heredoc.shell\" }, \"2\": { \"name\": \"punctuation.definition.string.heredoc.shell\" }, \"3\": { \"patterns\": [{ \"include\": \"#normal_statement_context\" }] } }, \"contentName\": \"string.unquoted.heredoc.indent\", \"end\": \"^\\\\t*(?:\\\\2)(?=\\\\s|;|&|$)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.heredoc.shell\" } }, \"patterns\": [{ \"include\": \"#double_quote_escape_char\" }, { \"include\": \"#variable\" }, { \"include\": \"#interpolation\" }] }, { \"begin\": `((?<!<)<<(?!<))[ \\\\t]*+((?<!\\\\w)[a-zA-Z_0-9-]+(?!\\\\w))(?=\\\\s|;|&|<|\"|')(.*)`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.heredoc.shell\" }, \"2\": { \"name\": \"punctuation.definition.string.heredoc.shell\" }, \"3\": { \"patterns\": [{ \"include\": \"#normal_statement_context\" }] } }, \"contentName\": \"string.unquoted.heredoc.no-indent\", \"end\": \"^(?:\\\\2)(?=\\\\s|;|&|$)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.heredoc.shell\" } }, \"patterns\": [{ \"include\": \"#double_quote_escape_char\" }, { \"include\": \"#variable\" }, { \"include\": \"#interpolation\" }] }] }, \"herestring\": { \"patterns\": [{ \"begin\": \"(<<<)\\\\s*(('))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.herestring.shell\" }, \"2\": { \"name\": \"string.quoted.single.shell\" }, \"3\": { \"name\": \"punctuation.definition.string.begin.shell\" } }, \"contentName\": \"string.quoted.single.shell\", \"end\": \"(')\", \"endCaptures\": { \"0\": { \"name\": \"string.quoted.single.shell\" }, \"1\": { \"name\": \"punctuation.definition.string.end.shell\" } }, \"name\": \"meta.herestring.shell\" }, { \"begin\": '(<<<)\\\\s*((\"))', \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.herestring.shell\" }, \"2\": { \"name\": \"string.quoted.double.shell\" }, \"3\": { \"name\": \"punctuation.definition.string.begin.shell\" } }, \"contentName\": \"string.quoted.double.shell\", \"end\": '(\")', \"endCaptures\": { \"0\": { \"name\": \"string.quoted.double.shell\" }, \"1\": { \"name\": \"punctuation.definition.string.end.shell\" } }, \"name\": \"meta.herestring.shell\", \"patterns\": [{ \"include\": \"#double_quote_context\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.herestring.shell\" }, \"2\": { \"name\": \"string.unquoted.herestring.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] } }, \"match\": \"(<<<)\\\\s*(([^\\\\s)\\\\\\\\]|\\\\\\\\.)+)\", \"name\": \"meta.herestring.shell\" }] }, \"initial_context\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pipeline\" }, { \"include\": \"#normal_statement_seperator\" }, { \"include\": \"#logical_expression_double\" }, { \"include\": \"#logical_expression_single\" }, { \"include\": \"#misc_ranges\" }, { \"include\": \"#loop\" }, { \"include\": \"#function_definition\" }, { \"include\": \"#variable\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#heredoc\" }, { \"include\": \"#herestring\" }, { \"include\": \"#redirection\" }, { \"include\": \"#pathname\" }, { \"include\": \"#keyword\" }, { \"include\": \"#alias_statement\" }, { \"include\": \"#normal_statement\" }, { \"include\": \"#string\" }, { \"include\": \"#support\" }] }, \"inline_comment\": { \"captures\": { \"1\": { \"name\": \"comment.block.shell punctuation.definition.comment.begin.shell\" }, \"2\": { \"name\": \"comment.block.shell\" }, \"3\": { \"patterns\": [{ \"match\": \"\\\\*\\\\/\", \"name\": \"comment.block.shell punctuation.definition.comment.end.shell\" }, { \"match\": \"\\\\*\", \"name\": \"comment.block.shell\" }] } }, \"match\": \"(\\\\/\\\\*)((?:[^\\\\*]|(?:\\\\*)++[^\\\\/])*+((?:\\\\*)++\\\\/))\" }, \"interpolation\": { \"patterns\": [{ \"begin\": \"\\\\$\\\\({2}\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.evaluation.arithmetic.begin.shell\" } }, \"end\": \"\\\\)\\\\s*\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.evaluation.arithmetic.end.shell\" } }, \"name\": \"string.other.math.shell\", \"patterns\": [{ \"include\": \"#math\" }] }, { \"begin\": \"`\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.evaluation.backticks.shell\" } }, \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.evaluation.backticks.shell\" } }, \"name\": \"string.interpolated.backtick.shell\", \"patterns\": [{ \"match\": \"\\\\\\\\[`\\\\\\\\$]\", \"name\": \"constant.character.escape.shell\" }, { \"begin\": \"(?<=\\\\W)(?=#)(?!#{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.shell\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.shell\" } }, \"end\": \"(?=`)\", \"name\": \"comment.line.number-sign.shell\" }] }, { \"include\": \"#initial_context\" }] }, { \"begin\": \"\\\\$\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.evaluation.parens.begin.shell\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.evaluation.parens.end.shell\" } }, \"name\": \"string.interpolated.dollar.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }] }, \"keyword\": { \"patterns\": [{ \"match\": \"(?<=^|;|&| |\\\\t)(?:continue|foreach|return|select|repeat|break|until|while|case|done|elif|else|esac|then|for|end|do|if|fi|in)(?= |\\\\t|;|&|$)\", \"name\": \"keyword.control.$0.shell\" }] }, \"line_comment\": { \"begin\": \"\\\\s*+(\\\\/\\\\/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.shell\" } }, \"end\": \"(?<=\\\\n)(?<!\\\\\\\\\\\\n)\", \"endCaptures\": {}, \"name\": \"comment.line.double-slash.shell\", \"patterns\": [{ \"include\": \"#line_continuation_character\" }] }, \"line_continuation\": { \"match\": \"\\\\\\\\(?=\\\\n)\", \"name\": \"constant.character.escape.line-continuation.shell\" }, \"logical-expression\": { \"patterns\": [{ \"comment\": \"do we want a special rule for ( expr )?\", \"match\": \"=[=~]?|!=?|<|>|&&|\\\\|\\\\|\", \"name\": \"keyword.operator.logical.shell\" }, { \"match\": \"(?<!\\\\S)-(nt|ot|ef|eq|ne|l[te]|g[te]|[a-hknoprstuwxzOGLSN])\\\\b\", \"name\": \"keyword.operator.logical.shell\" }] }, \"logical_expression_context\": { \"patterns\": [{ \"include\": \"#regex_comparison\" }, { \"include\": \"#logical-expression\" }, { \"include\": \"#logical_expression_single\" }, { \"include\": \"#logical_expression_double\" }, { \"include\": \"#comment\" }, { \"include\": \"#boolean\" }, { \"include\": \"#redirect_number\" }, { \"include\": \"#numeric_literal\" }, { \"include\": \"#pipeline\" }, { \"include\": \"#normal_statement_seperator\" }, { \"include\": \"#string\" }, { \"include\": \"#variable\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#heredoc\" }, { \"include\": \"#herestring\" }, { \"include\": \"#pathname\" }, { \"include\": \"#keyword\" }, { \"include\": \"#support\" }] }, \"logical_expression_double\": { \"begin\": \"\\\\[\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.logical-expression.shell\" } }, \"end\": \"\\\\]\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.logical-expression.shell\" } }, \"name\": \"meta.scope.logical-expression.shell\", \"patterns\": [{ \"include\": \"#logical_expression_context\" }] }, \"logical_expression_single\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.logical-expression.shell\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.logical-expression.shell\" } }, \"name\": \"meta.scope.logical-expression.shell\", \"patterns\": [{ \"include\": \"#logical_expression_context\" }] }, \"loop\": { \"patterns\": [{ \"begin\": \"(?<=^|;|&|\\\\s)(for)\\\\s+(?=\\\\({2})\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.shell\" } }, \"end\": \"(?<=^|;|&|\\\\s)done(?=\\\\s|;|&|$|\\\\))\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control.shell\" } }, \"name\": \"meta.scope.for-loop.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }, { \"begin\": \"(?<=^|;|&|\\\\s)(for)\\\\s+(.+?)\\\\s+(in)(?=\\\\s|;|&|$)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.shell\" }, \"2\": { \"name\": \"variable.other.loop.shell\", \"patterns\": [{ \"include\": \"#string\" }] }, \"3\": { \"name\": \"keyword.control.shell\" } }, \"end\": \"(?<=^|;|&|\\\\s)done(?=\\\\s|;|&|$|\\\\))\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control.shell\" } }, \"name\": \"meta.scope.for-in-loop.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }, { \"begin\": \"(?<=^|;|&|\\\\s)(while|until)(?=\\\\s|;|&|$)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.shell\" } }, \"end\": \"(?<=^|;|&|\\\\s)done(?=\\\\s|;|&|$|\\\\))\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control.shell\" } }, \"name\": \"meta.scope.while-loop.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }, { \"begin\": \"(?<=^|;|&|\\\\s)(select)\\\\s+((?:[^\\\\s\\\\\\\\]|\\\\\\\\.)+)(?=\\\\s|;|&|$)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.shell\" }, \"2\": { \"name\": \"variable.other.loop.shell\" } }, \"end\": \"(?<=^|;|&|\\\\s)(done)(?=\\\\s|;|&|$|\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.shell\" } }, \"name\": \"meta.scope.select-block.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }, { \"begin\": \"(?<=^|;|&|\\\\s)case(?=\\\\s|;|&|$)\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.shell\" } }, \"end\": \"(?<=^|;|&|\\\\s)esac(?=\\\\s|;|&|$)\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control.shell\" } }, \"name\": \"meta.scope.case-block.shell\", \"patterns\": [{ \"begin\": \"(?<=^|;|&|\\\\s)in(?=\\\\s|;|&|$)\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.shell\" } }, \"end\": \"(?<=^|;|&|\\\\s)(?=esac(\\\\s|;|&|$))\", \"name\": \"meta.scope.case-body.shell\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#case-clause\" }] }, { \"include\": \"#initial_context\" }] }, { \"begin\": \"(?<=^|;|&|\\\\s)if(?=\\\\s|;|&|$)\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.shell\" } }, \"end\": \"(?<=^|;|&|\\\\s)fi(?=\\\\s|;|&|$)\", \"endCaptures\": { \"0\": { \"name\": \"keyword.control.shell\" } }, \"name\": \"meta.scope.if-block.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }] }, \"math\": { \"patterns\": [{ \"include\": \"#variable\" }, { \"match\": \"\\\\+{1,2}|-{1,2}|!|~|\\\\*{1,2}|/|%|<[<=]?|>[>=]?|==|!=|^|\\\\|{1,2}|&{1,2}|\\\\?|\\\\:|,|=|[*/%+\\\\-&^|]=|<<=|>>=\", \"name\": \"keyword.operator.arithmetic.shell\" }, { \"match\": \"0[xX][0-9A-Fa-f]+\", \"name\": \"constant.numeric.hex.shell\" }, { \"match\": \"0\\\\d+\", \"name\": \"constant.numeric.octal.shell\" }, { \"match\": \"\\\\d{1,2}#[0-9a-zA-Z@_]+\", \"name\": \"constant.numeric.other.shell\" }, { \"match\": \"\\\\d+\", \"name\": \"constant.numeric.integer.shell\" }] }, \"misc_ranges\": { \"patterns\": [{ \"include\": \"#logical_expression_single\" }, { \"include\": \"#logical_expression_double\" }, { \"begin\": \"\\\\(\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.arithmetic.shell\" } }, \"end\": \"\\\\)\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.arithmetic.shell\" } }, \"name\": \"meta.arithmetic.shell\", \"patterns\": [{ \"include\": \"#math\" }] }, { \"begin\": \"(?<!=)\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.subshell\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.subshell\" } }, \"name\": \"meta.scope.subshell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }, { \"begin\": \"(?<![^ \\\\t])({)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.shell\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.group.shell\" } }, \"name\": \"meta.scope.group.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }] }, \"modifiers\": { \"match\": \"(?<=^|;|&|[ \\\\t])(?:readonly|declare|typeset|export|local)(?=[ \\\\t]|;|&|$)\", \"name\": \"storage.modifier.$0.shell\" }, \"normal_statement\": { \"begin\": \"(?!^[ \\\\t]*+$)(?:(?<=^until | until |\\\\tuntil |^while | while |\\\\twhile |^elif | elif |\\\\telif |^else | else |\\\\telse |^then | then |\\\\tthen |^do | do |\\\\tdo |^if | if |\\\\tif )|(?<=(?:^|;|\\\\||&|!|\\\\(|\\\\{|\\\\`)))[ \\\\t]*+(?!nocorrect\\\\W|nocorrect\\\\$|function\\\\W|function\\\\$|foreach\\\\W|foreach\\\\$|repeat\\\\W|repeat\\\\$|logout\\\\W|logout\\\\$|coproc\\\\W|coproc\\\\$|select\\\\W|select\\\\$|while\\\\W|while\\\\$|pushd\\\\W|pushd\\\\$|until\\\\W|until\\\\$|case\\\\W|case\\\\$|done\\\\W|done\\\\$|elif\\\\W|elif\\\\$|else\\\\W|else\\\\$|esac\\\\W|esac\\\\$|popd\\\\W|popd\\\\$|then\\\\W|then\\\\$|time\\\\W|time\\\\$|for\\\\W|for\\\\$|end\\\\W|end\\\\$|fi\\\\W|fi\\\\$|do\\\\W|do\\\\$|in\\\\W|in\\\\$|if\\\\W|if\\\\$)\", \"beginCaptures\": {}, \"end\": \"(?=;|\\\\||&|\\\\n|\\\\)|\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\)\", \"endCaptures\": {}, \"name\": \"meta.statement.shell\", \"patterns\": [{ \"include\": \"#function_definition\" }, { \"include\": \"#assignment\" }, { \"begin\": \"[ \\\\t]*+(?!(?:!|&|\\\\||\\\\(|\\\\)|\\\\{|\\\\[|<|>|#|\\\\n|$|;|[ \\\\t]))(?!foreach\\\\b(?!\\\\/)|select\\\\b(?!\\\\/)|repeat\\\\b(?!\\\\/)|until\\\\b(?!\\\\/)|while\\\\b(?!\\\\/)|case\\\\b(?!\\\\/)|done\\\\b(?!\\\\/)|elif\\\\b(?!\\\\/)|else\\\\b(?!\\\\/)|esac\\\\b(?!\\\\/)|then\\\\b(?!\\\\/)|for\\\\b(?!\\\\/)|end\\\\b(?!\\\\/)|in\\\\b(?!\\\\/)|fi\\\\b(?!\\\\/)|do\\\\b(?!\\\\/)|if\\\\b(?!\\\\/))(?!\\\\\\\\\\\\n?$)\", \"beginCaptures\": {}, \"end\": \"(?=;|\\\\||&|\\\\n|\\\\)|\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\)\", \"endCaptures\": {}, \"name\": \"meta.statement.command.shell\", \"patterns\": [{ \"begin\": \"\\\\G\", \"beginCaptures\": {}, \"end\": \"(?= |\\\\t|;|\\\\||&|$|\\\\n|\\\\)|\\\\`)\", \"endCaptures\": {}, \"name\": \"meta.statement.command.name.shell\", \"patterns\": [{ \"include\": \"#modifiers\" }, { \"match\": \"(?<!\\\\w)(?:continue|return|break)(?!\\\\w)\", \"name\": \"entity.name.function.call.shell entity.name.command.shell keyword.control.$0.shell\" }, { \"match\": \"(?<!\\\\w)(?:unfunction|continue|autoload|unsetopt|bindkey|builtin|getopts|command|declare|unalias|history|unlimit|typeset|suspend|source|printf|unhash|disown|ulimit|return|which|alias|break|false|print|shift|times|umask|umask|unset|read|type|exec|eval|wait|echo|dirs|jobs|kill|hash|stat|exit|test|trap|true|let|set|pwd|cd|fg|bg|fc|:|\\\\.)(?!\\\\/)(?!\\\\w)\", \"name\": \"entity.name.function.call.shell entity.name.command.shell support.function.builtin.shell\" }, { \"include\": \"#variable\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.function.call.shell entity.name.command.shell\" } }, \"match\": `(?<=\\\\G|'|\"|\\\\}|\\\\))([^ \\\\n\\\\t\\\\r\"'=;&\\\\|\\`\\\\)\\\\{]+)` }, { \"begin\": `(?:\\\\G|(?<! |\\\\t|;|\\\\||&|\\\\n|\\\\{|#))((?:\\\\$)?)((?:(\")|(')))`, \"beginCaptures\": { \"1\": { \"name\": \"meta.statement.command.name.quoted.shell punctuation.definition.string.shell entity.name.function.call.shell entity.name.command.shell\" }, \"2\": {}, \"3\": { \"name\": \"meta.statement.command.name.quoted.shell string.quoted.double.shell punctuation.definition.string.begin.shell entity.name.function.call.shell entity.name.command.shell\" }, \"4\": { \"name\": \"meta.statement.command.name.quoted.shell string.quoted.single.shell punctuation.definition.string.begin.shell entity.name.function.call.shell entity.name.command.shell\" } }, \"end\": \"(?<!\\\\G)(?<=(?:\\\\2))\", \"endCaptures\": {}, \"patterns\": [{ \"include\": \"#continuation_of_single_quoted_command_name\" }, { \"include\": \"#continuation_of_double_quoted_command_name\" }] }, { \"include\": \"#line_continuation\" }] }, { \"include\": \"#line_continuation\" }, { \"include\": \"#option\" }, { \"include\": \"#argument\" }, { \"include\": \"#statement_context\" }, { \"include\": \"#string\" }] }, { \"include\": \"#line_continuation\" }, { \"include\": \"#normal_statement_context\" }] }, \"normal_statement_context\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#pipeline\" }, { \"include\": \"#normal_statement_seperator\" }, { \"include\": \"#misc_ranges\" }, { \"include\": \"#boolean\" }, { \"include\": \"#redirect_number\" }, { \"include\": \"#numeric_literal\" }, { \"include\": \"#string\" }, { \"include\": \"#variable\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#heredoc\" }, { \"include\": \"#herestring\" }, { \"include\": \"#redirection\" }, { \"include\": \"#pathname\" }, { \"include\": \"#keyword\" }, { \"include\": \"#support\" }] }, \"normal_statement_seperator\": { \"captures\": { \"1\": { \"name\": \"punctuation.terminator.statement.semicolon.shell\" }, \"2\": { \"name\": \"punctuation.separator.statement.and.shell\" }, \"3\": { \"name\": \"punctuation.separator.statement.or.shell\" }, \"4\": { \"name\": \"punctuation.separator.statement.background.shell\" } }, \"match\": \"(?:(?:(?:(?:(;)|(&&))|(\\\\|\\\\|))|(&))|\\\\n)\" }, \"numeric_literal\": { \"captures\": { \"1\": { \"name\": \"constant.numeric.shell constant.numeric.hex.shell\" }, \"2\": { \"name\": \"constant.numeric.shell constant.numeric.octal.shell\" }, \"3\": { \"name\": \"constant.numeric.shell constant.numeric.other.shell\" }, \"4\": { \"name\": \"constant.numeric.shell constant.numeric.integer.shell\" }, \"5\": { \"name\": \"constant.numeric.shell constant.numeric.integer.shell\" } }, \"match\": \"[ \\\\t]*+(?<==| |\\\\t|^|\\\\{|\\\\(|\\\\[)(?:(?:(?:(?:(0[xX][0-9A-Fa-f]+)|(0\\\\d+))|(\\\\d{1,2}#[0-9a-zA-Z@_]+))|(-?\\\\d+\\\\.\\\\d+))|(-?\\\\d+))(?!>)\" }, \"option\": { \"begin\": \"[ \\\\t]++(-)((?!(?:!|&|\\\\||\\\\(|\\\\)|\\\\{|\\\\[|<|>|#|\\\\n|$|;|[ \\\\t])))\", \"beginCaptures\": { \"1\": { \"name\": \"string.unquoted.argument.shell constant.other.option.dash.shell\" }, \"2\": { \"name\": \"string.unquoted.argument.shell constant.other.option.shell\" } }, \"contentName\": \"string.unquoted.argument constant.other.option\", \"end\": \"(?:(?=[ \\\\t])|(?=;|\\\\||&|\\\\n|\\\\)|\\\\`|\\\\{|\\\\}|[ \\\\t]*#|\\\\])(?<!\\\\\\\\))\", \"endCaptures\": {}, \"patterns\": [{ \"include\": \"#option_context\" }] }, \"option_context\": { \"patterns\": [{ \"include\": \"#misc_ranges\" }, { \"include\": \"#string\" }, { \"include\": \"#variable\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#heredoc\" }, { \"include\": \"#herestring\" }, { \"include\": \"#redirection\" }, { \"include\": \"#pathname\" }, { \"include\": \"#keyword\" }, { \"include\": \"#support\" }] }, \"pathname\": { \"patterns\": [{ \"match\": \"(?<=\\\\s|:|=|^)~\", \"name\": \"keyword.operator.tilde.shell\" }, { \"match\": \"\\\\*|\\\\?\", \"name\": \"keyword.operator.glob.shell\" }, { \"begin\": \"([?*+@!])(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.extglob.shell\" }, \"2\": { \"name\": \"punctuation.definition.extglob.shell\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.extglob.shell\" } }, \"name\": \"meta.structure.extglob.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }] }, \"pipeline\": { \"patterns\": [{ \"match\": \"(?<=^|;|&|\\\\s)(time)(?=\\\\s|;|&|$)\", \"name\": \"keyword.other.shell\" }, { \"match\": \"[|!]\", \"name\": \"keyword.operator.pipe.shell\" }] }, \"redirect_number\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.redirect.stdout.shell\" }, \"2\": { \"name\": \"keyword.operator.redirect.stderr.shell\" }, \"3\": { \"name\": \"keyword.operator.redirect.$3.shell\" } }, \"match\": \"(?<=[ \\\\t])(?:(1)|(2)|(\\\\d+))(?=>)\" }, \"redirection\": { \"patterns\": [{ \"begin\": \"[><]\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.shell\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.shell\" } }, \"name\": \"string.interpolated.process-substitution.shell\", \"patterns\": [{ \"include\": \"#initial_context\" }] }, { \"match\": \"(?<![<>])(&>|\\\\d*>&\\\\d*|\\\\d*(>>|>|<)|\\\\d*<&|\\\\d*<>)(?![<>])\", \"name\": \"keyword.operator.redirect.shell\" }] }, \"regex_comparison\": { \"match\": \"\\\\=~\", \"name\": \"keyword.operator.logical.regex.shell\" }, \"regexp\": { \"patterns\": [{ \"match\": \".+\" }] }, \"simple_options\": { \"captures\": { \"0\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"string.unquoted.argument.shell constant.other.option.dash.shell\" }, \"2\": { \"name\": \"string.unquoted.argument.shell constant.other.option.shell\" } }, \"match\": \"[ \\\\t]++(\\\\-)(\\\\w+)\" }] } }, \"match\": \"(?:[ \\\\t]++\\\\-\\\\w+)*\" }, \"start_of_command\": { \"match\": \"[ \\\\t]*+(?!(?:!|&|\\\\||\\\\(|\\\\)|\\\\{|\\\\[|<|>|#|\\\\n|$|;|[ \\\\t]))(?!foreach\\\\b(?!\\\\/)|select\\\\b(?!\\\\/)|repeat\\\\b(?!\\\\/)|until\\\\b(?!\\\\/)|while\\\\b(?!\\\\/)|case\\\\b(?!\\\\/)|done\\\\b(?!\\\\/)|elif\\\\b(?!\\\\/)|else\\\\b(?!\\\\/)|esac\\\\b(?!\\\\/)|then\\\\b(?!\\\\/)|for\\\\b(?!\\\\/)|end\\\\b(?!\\\\/)|in\\\\b(?!\\\\/)|fi\\\\b(?!\\\\/)|do\\\\b(?!\\\\/)|if\\\\b(?!\\\\/))(?!\\\\\\\\\\\\n?$)\" }, \"start_of_double_quoted_command_name\": { \"captures\": { \"1\": { \"name\": \"entity.name.function.call.shell entity.name.command.shell\", \"patterns\": [{ \"match\": \"\\\\*\", \"name\": \"variable.language.special.wildcard.shell\" }, { \"include\": \"#variable\" }, { \"include\": \"#numeric_literal\" }, { \"captures\": { \"1\": { \"name\": \"constant.language.$1.shell\" } }, \"match\": \"(?<!\\\\w)(\\\\b(?:true|false)\\\\b)(?!\\\\w)\" }] } }, \"match\": '(?!(?:!|&|\\\\||\\\\(|\\\\)|\\\\{|\\\\[|<|>|#|\\\\n|$|;|[ \\\\t]))(?:[ \\\\t]*+([^\\n\\'&;<>\\\\(\\\\)\\\\$`\\\\\\\\\"\\\\|]+(?!>)))?(?:(?:\\\\$\")|\")', \"name\": \"meta.statement.command.name.quoted.shell string.quoted.double.shell punctuation.definition.string.begin.shell entity.name.function.call.shell entity.name.command.shell\" }, \"start_of_single_quoted_command_name\": { \"captures\": { \"1\": { \"name\": \"entity.name.function.call.shell entity.name.command.shell\", \"patterns\": [{ \"match\": \"\\\\*\", \"name\": \"variable.language.special.wildcard.shell\" }, { \"include\": \"#variable\" }, { \"include\": \"#numeric_literal\" }, { \"captures\": { \"1\": { \"name\": \"constant.language.$1.shell\" } }, \"match\": \"(?<!\\\\w)(\\\\b(?:true|false)\\\\b)(?!\\\\w)\" }] } }, \"match\": \"(?!(?:!|&|\\\\||\\\\(|\\\\)|\\\\{|\\\\[|<|>|#|\\\\n|$|;|[ \\\\t]))(?:[ \\\\t]*+([^\\n'&;<>\\\\(\\\\)\\\\$`\\\\\\\\\\\"\\\\|]+(?!>)))?(?:(?:\\\\$')|')\", \"name\": \"meta.statement.command.name.quoted.shell string.quoted.single.shell punctuation.definition.string.begin.shell entity.name.function.call.shell entity.name.command.shell\" }, \"string\": { \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.shell\" }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.shell\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.shell\" } }, \"name\": \"string.quoted.single.shell\" }, { \"begin\": '\\\\$?\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.shell\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.shell\" } }, \"name\": \"string.quoted.double.shell\", \"patterns\": [{ \"match\": '\\\\\\\\[\\\\$\\\\n`\"\\\\\\\\]', \"name\": \"constant.character.escape.shell\" }, { \"include\": \"#variable\" }, { \"include\": \"#interpolation\" }] }, { \"begin\": \"\\\\$'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.shell\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.shell\" } }, \"name\": \"string.quoted.single.dollar.shell\", \"patterns\": [{ \"match\": \"\\\\\\\\(?:a|b|e|f|n|r|t|v|\\\\\\\\|')\", \"name\": \"constant.character.escape.ansi-c.shell\" }, { \"match\": '\\\\\\\\[0-9]{3}\"', \"name\": \"constant.character.escape.octal.shell\" }, { \"match\": '\\\\\\\\x[0-9a-fA-F]{2}\"', \"name\": \"constant.character.escape.hex.shell\" }, { \"match\": '\\\\\\\\c.\"', \"name\": \"constant.character.escape.control-char.shell\" }] }] }, \"support\": { \"patterns\": [{ \"match\": \"(?<=^|;|&|\\\\s)(?::|\\\\.)(?=\\\\s|;|&|$)\", \"name\": \"support.function.builtin.shell\" }] }, \"variable\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.shell variable.parameter.positional.all.shell\" }, \"2\": { \"name\": \"variable.parameter.positional.all.shell\" } }, \"match\": \"(\\\\$)(\\\\@(?!\\\\w))\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.shell variable.parameter.positional.shell\" }, \"2\": { \"name\": \"variable.parameter.positional.shell\" } }, \"match\": \"(\\\\$)([0-9](?!\\\\w))\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.shell variable.language.special.shell\" }, \"2\": { \"name\": \"variable.language.special.shell\" } }, \"match\": \"(\\\\$)([-*#?$!0_](?!\\\\w))\" }, { \"begin\": \"(\\\\$)(\\\\{)[ \\\\t]*+(?=\\\\d)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.variable.shell variable.parameter.positional.shell\" }, \"2\": { \"name\": \"punctuation.section.bracket.curly.variable.begin.shell punctuation.definition.variable.shell variable.parameter.positional.shell\" } }, \"contentName\": \"meta.parameter-expansion\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.bracket.curly.variable.end.shell punctuation.definition.variable.shell variable.parameter.positional.shell\" } }, \"patterns\": [{ \"match\": \"!|:[-=?]?|\\\\*|@|##|#|%%|%|\\\\/\", \"name\": \"keyword.operator.expansion.shell\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.section.array.shell\" }, \"2\": { \"name\": \"punctuation.section.array.shell\" } }, \"match\": \"(\\\\[)[^\\\\]]+(\\\\])\" }, { \"match\": \"[0-9]+\", \"name\": \"variable.parameter.positional.shell\" }, { \"match\": \"(?<!\\\\w)[a-zA-Z_0-9-]+(?!\\\\w)\", \"name\": \"variable.other.normal.shell\" }, { \"include\": \"#variable\" }, { \"include\": \"#string\" }] }, { \"begin\": \"(\\\\$)(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.variable.shell\" }, \"2\": { \"name\": \"punctuation.section.bracket.curly.variable.begin.shell punctuation.definition.variable.shell\" } }, \"contentName\": \"meta.parameter-expansion\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.bracket.curly.variable.end.shell punctuation.definition.variable.shell\" } }, \"patterns\": [{ \"match\": \"!|:[-=?]?|\\\\*|@|##|#|%%|%|\\\\/\", \"name\": \"keyword.operator.expansion.shell\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.section.array.shell\" }, \"2\": { \"name\": \"punctuation.section.array.shell\" } }, \"match\": \"(\\\\[)[^\\\\]]+(\\\\])\" }, { \"match\": \"(?<!\\\\w)[a-zA-Z_0-9-]+(?!\\\\w)\", \"name\": \"variable.other.normal.shell\" }, { \"include\": \"#variable\" }, { \"include\": \"#string\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.shell variable.other.normal.shell\" }, \"2\": { \"name\": \"variable.other.normal.shell\" } }, \"match\": \"(\\\\$)(\\\\w+(?!\\\\w))\" }] } }, \"scopeName\": \"source.shell\", \"aliases\": [\"bash\", \"sh\", \"shell\", \"zsh\"] });\nvar shellscript = [\n  lang\n];\n\nexport { shellscript as default };\n"],
  "mappings": "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",
  "names": []
}
