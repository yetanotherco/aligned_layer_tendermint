{
  "version": 3,
  "sources": ["../../@ping-pub/chain-registry-client/src/index.ts"],
  "sourcesContent": ["import fetch from \"cross-fetch\"\nimport {Chain, Entry, AssetList, IBCPath, IBCPathInfo} from './types'\n\nexport default class ChainRegistryClient{\n\n    readonly endpoint: string\n\n    constructor(endpoint = 'https://registry.ping.pub') {\n        this.endpoint = endpoint\n    }\n\n    async getAny(url : string): Promise<any> {\n        return fetch(`${this.endpoint}${url}`).then((res) => res.json())\n    }\n    async get<T>(url : string): Promise<T> {\n        return fetch(`${this.endpoint}${url}`).then((res) => res.json())\n    }\n    async fetchChainNames(): Promise<string[]> {\n        const entris = await this.get<Entry[]>('/')\n        return entris.filter( i => i.type === 'directory' && i.name !== 'testnet' && !i.name.startsWith('_')).map(x => x.name)\n    }\n    async fetchChainInfo(chainName: string) {\n        return this.get<Chain>(`/${chainName}/chain.json`)\n    }\n    async fetchAssetsList(chainName: string) {\n        return this.get<AssetList>(`/${chainName}/assetlist.json`)\n    }\n    async fetchIBCPaths() {\n        const entries = await this.get<Entry[]>('/_IBC/')\n        const re = /([\\w]+)-([\\w]+)\\.json/;\n        return entries.map(x => {\n            const matches = x.name.match(re)\n            const bridge = {} as IBCPath\n            bridge.path = x.name\n            bridge.from = matches[1]\n            bridge.to = matches[2]\n            return bridge\n        })\n    }\n    async fetchIBCPathInfo(path: string) {\n        const info = await this.get<IBCPathInfo>(`/_IBC/${path}`)\n        return info\n    }\n\n}"],
  "mappings": ";;;;;;;;AAAA,yBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGlB,IAAqB,sBAArB,MAAwC;EAIpC,YAAY,WAAW,6BAA2B;AAC9C,SAAK,WAAW;EACpB;EAEM,OAAO,KAAY;;AACrB,iBAAO,mBAAAA,SAAM,GAAG,KAAK,QAAQ,GAAG,GAAG,EAAE,EAAE,KAAK,CAAC,QAAQ,IAAI,KAAI,CAAE;IACnE,CAAC;;EACK,IAAO,KAAY;;AACrB,iBAAO,mBAAAA,SAAM,GAAG,KAAK,QAAQ,GAAG,GAAG,EAAE,EAAE,KAAK,CAAC,QAAQ,IAAI,KAAI,CAAE;IACnE,CAAC;;EACK,kBAAe;;AACjB,YAAM,SAAS,MAAM,KAAK,IAAa,GAAG;AAC1C,aAAO,OAAO,OAAQ,OAAK,EAAE,SAAS,eAAe,EAAE,SAAS,aAAa,CAAC,EAAE,KAAK,WAAW,GAAG,CAAC,EAAE,IAAI,OAAK,EAAE,IAAI;IACzH,CAAC;;EACK,eAAe,WAAiB;;AAClC,aAAO,KAAK,IAAW,IAAI,SAAS,aAAa;IACrD,CAAC;;EACK,gBAAgB,WAAiB;;AACnC,aAAO,KAAK,IAAe,IAAI,SAAS,iBAAiB;IAC7D,CAAC;;EACK,gBAAa;;AACf,YAAM,UAAU,MAAM,KAAK,IAAa,QAAQ;AAChD,YAAM,KAAK;AACX,aAAO,QAAQ,IAAI,OAAI;AACnB,cAAM,UAAU,EAAE,KAAK,MAAM,EAAE;AAC/B,cAAM,SAAS,CAAA;AACf,eAAO,OAAO,EAAE;AAChB,eAAO,OAAO,QAAQ,CAAC;AACvB,eAAO,KAAK,QAAQ,CAAC;AACrB,eAAO;MACX,CAAC;IACL,CAAC;;EACK,iBAAiB,MAAY;;AAC/B,YAAM,OAAO,MAAM,KAAK,IAAiB,SAAS,IAAI,EAAE;AACxD,aAAO;IACX,CAAC;;;",
  "names": ["fetch"]
}
