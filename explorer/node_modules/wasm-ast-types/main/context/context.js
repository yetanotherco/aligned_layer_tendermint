"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDefinitionSchema = exports.defaultOptions = exports.RenderContext = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _imports = require("./imports");

var _deepmerge = _interopRequireDefault(require("deepmerge"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

;
var defaultOptions = {
  types: {
    enabled: true,
    aliasExecuteMsg: false
  },
  client: {
    enabled: true,
    execExtendsQuery: true,
    noImplicitOverride: false
  },
  recoil: {
    enabled: false
  },
  messageComposer: {
    enabled: false
  },
  reactQuery: {
    enabled: false,
    optionalClient: false,
    version: 'v3',
    mutations: false,
    camelize: true,
    queryKeys: false
  }
};
exports.defaultOptions = defaultOptions;

var getDefinitionSchema = function getDefinitionSchema(schemas) {
  var aggregateSchema = {
    definitions: {//
    }
  };
  schemas.forEach(function (schema) {
    schema.definitions = schema.definitions || {};
    aggregateSchema.definitions = _objectSpread(_objectSpread({}, aggregateSchema.definitions), schema.definitions);
  });
  return aggregateSchema;
};

exports.getDefinitionSchema = getDefinitionSchema;

var RenderContext = /*#__PURE__*/function () {
  function RenderContext(contract, options) {
    (0, _classCallCheck2["default"])(this, RenderContext);
    (0, _defineProperty2["default"])(this, "contract", void 0);
    (0, _defineProperty2["default"])(this, "utils", []);
    (0, _defineProperty2["default"])(this, "schema", void 0);
    this.contract = contract;
    this.schema = getDefinitionSchema(contract.schemas);
    this.options = (0, _deepmerge["default"])(defaultOptions, options !== null && options !== void 0 ? options : {});
  }

  (0, _createClass2["default"])(RenderContext, [{
    key: "refLookup",
    value: function refLookup($ref) {
      var _this$schema$definiti;

      var refName = $ref.replace('#/definitions/', '');
      return (_this$schema$definiti = this.schema.definitions) === null || _this$schema$definiti === void 0 ? void 0 : _this$schema$definiti[refName];
    }
  }, {
    key: "addUtil",
    value: function addUtil(util) {
      this.utils[util] = true;
    }
  }, {
    key: "getImports",
    value: function getImports() {
      return (0, _imports.getImportStatements)((0, _imports.convertUtilsToImportList)(this, Object.keys(this.utils)));
    }
  }]);
  return RenderContext;
}();

exports.RenderContext = RenderContext;