"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

var t = _interopRequireWildcard(require("@babel/types"));

var _query_msg = _interopRequireDefault(require("../../../../__fixtures__/basic/query_msg.json"));

var _execute_msg_for__empty = _interopRequireDefault(require("../../../../__fixtures__/basic/execute_msg_for__empty.json"));

var _reactQuery = require("./react-query");

var _testUtils = require("../../test-utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var execCtx = (0, _testUtils.makeContext)(_execute_msg_for__empty["default"]);
var queryCtx = (0, _testUtils.makeContext)(_query_msg["default"]);
it('createReactQueryHooks', function () {
  (0, _testUtils.expectCode)(t.program((0, _reactQuery.createReactQueryHooks)({
    context: queryCtx,
    queryMsg: _query_msg["default"],
    contractName: 'Sg721',
    QueryClient: 'Sg721QueryClient'
  })));
  (0, _testUtils.expectCode)(t.program((0, _reactQuery.createReactQueryHooks)({
    context: (0, _testUtils.makeContext)(_query_msg["default"], {
      reactQuery: {
        optionalClient: true
      }
    }),
    queryMsg: _query_msg["default"],
    contractName: 'Sg721',
    QueryClient: 'Sg721QueryClient'
  })));
  (0, _testUtils.expectCode)(t.program((0, _reactQuery.createReactQueryHooks)({
    context: (0, _testUtils.makeContext)(_query_msg["default"], {
      reactQuery: {
        version: 'v4'
      }
    }),
    queryMsg: _query_msg["default"],
    contractName: 'Sg721',
    QueryClient: 'Sg721QueryClient'
  })));
  (0, _testUtils.expectCode)(t.program((0, _reactQuery.createReactQueryHooks)({
    context: (0, _testUtils.makeContext)(_query_msg["default"], {
      reactQuery: {
        optionalClient: true,
        version: 'v4'
      }
    }),
    queryMsg: _query_msg["default"],
    contractName: 'Sg721',
    QueryClient: 'Sg721QueryClient'
  })));
  (0, _testUtils.expectCode)(t.program((0, _reactQuery.createReactQueryHooks)({
    context: (0, _testUtils.makeContext)(_query_msg["default"], {
      reactQuery: {
        optionalClient: true,
        version: 'v4',
        queryKeys: true,
        queryFactory: true
      }
    }),
    queryMsg: _query_msg["default"],
    contractName: 'Sg721',
    QueryClient: 'Sg721QueryClient'
  })));
  (0, _testUtils.expectCode)(t.program((0, _reactQuery.createReactQueryMutationHooks)({
    context: execCtx,
    execMsg: _execute_msg_for__empty["default"],
    contractName: 'Sg721',
    ExecuteClient: 'Sg721Client'
  })));
});