"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AminoConverter = void 0;

var _helpers = require("../../helpers");

//@ts-nocheck
var AminoConverter = {
  "/osmosis.concentratedliquidity.v1beta1.MsgCreatePosition": {
    aminoType: "osmosis/concentratedliquidity/create-position",
    toAmino: function toAmino(_ref) {
      var poolId = _ref.poolId,
          sender = _ref.sender,
          lowerTick = _ref.lowerTick,
          upperTick = _ref.upperTick,
          tokenDesired0 = _ref.tokenDesired0,
          tokenDesired1 = _ref.tokenDesired1,
          tokenMinAmount0 = _ref.tokenMinAmount0,
          tokenMinAmount1 = _ref.tokenMinAmount1;
      return {
        pool_id: poolId.toString(),
        sender: sender,
        lower_tick: lowerTick.toString(),
        upper_tick: upperTick.toString(),
        token_desired0: {
          denom: tokenDesired0.denom,
          amount: _helpers.Long.fromValue(tokenDesired0.amount).toString()
        },
        token_desired1: {
          denom: tokenDesired1.denom,
          amount: _helpers.Long.fromValue(tokenDesired1.amount).toString()
        },
        token_min_amount0: tokenMinAmount0,
        token_min_amount1: tokenMinAmount1
      };
    },
    fromAmino: function fromAmino(_ref2) {
      var pool_id = _ref2.pool_id,
          sender = _ref2.sender,
          lower_tick = _ref2.lower_tick,
          upper_tick = _ref2.upper_tick,
          token_desired0 = _ref2.token_desired0,
          token_desired1 = _ref2.token_desired1,
          token_min_amount0 = _ref2.token_min_amount0,
          token_min_amount1 = _ref2.token_min_amount1;
      return {
        poolId: _helpers.Long.fromString(pool_id),
        sender: sender,
        lowerTick: _helpers.Long.fromString(lower_tick),
        upperTick: _helpers.Long.fromString(upper_tick),
        tokenDesired0: {
          denom: token_desired0.denom,
          amount: token_desired0.amount
        },
        tokenDesired1: {
          denom: token_desired1.denom,
          amount: token_desired1.amount
        },
        tokenMinAmount0: token_min_amount0,
        tokenMinAmount1: token_min_amount1
      };
    }
  },
  "/osmosis.concentratedliquidity.v1beta1.MsgWithdrawPosition": {
    aminoType: "osmosis/concentratedliquidity/withdraw-position",
    toAmino: function toAmino(_ref3) {
      var poolId = _ref3.poolId,
          sender = _ref3.sender,
          lowerTick = _ref3.lowerTick,
          upperTick = _ref3.upperTick,
          liquidityAmount = _ref3.liquidityAmount;
      return {
        pool_id: poolId.toString(),
        sender: sender,
        lower_tick: lowerTick.toString(),
        upper_tick: upperTick.toString(),
        liquidity_amount: liquidityAmount
      };
    },
    fromAmino: function fromAmino(_ref4) {
      var pool_id = _ref4.pool_id,
          sender = _ref4.sender,
          lower_tick = _ref4.lower_tick,
          upper_tick = _ref4.upper_tick,
          liquidity_amount = _ref4.liquidity_amount;
      return {
        poolId: _helpers.Long.fromString(pool_id),
        sender: sender,
        lowerTick: _helpers.Long.fromString(lower_tick),
        upperTick: _helpers.Long.fromString(upper_tick),
        liquidityAmount: liquidity_amount
      };
    }
  },
  "/osmosis.concentratedliquidity.v1beta1.MsgCollectFees": {
    aminoType: "osmosis/concentratedliquidity/collect-fees",
    toAmino: function toAmino(_ref5) {
      var poolId = _ref5.poolId,
          sender = _ref5.sender,
          lowerTick = _ref5.lowerTick,
          upperTick = _ref5.upperTick;
      return {
        pool_id: poolId.toString(),
        sender: sender,
        lower_tick: lowerTick.toString(),
        upper_tick: upperTick.toString()
      };
    },
    fromAmino: function fromAmino(_ref6) {
      var pool_id = _ref6.pool_id,
          sender = _ref6.sender,
          lower_tick = _ref6.lower_tick,
          upper_tick = _ref6.upper_tick;
      return {
        poolId: _helpers.Long.fromString(pool_id),
        sender: sender,
        lowerTick: _helpers.Long.fromString(lower_tick),
        upperTick: _helpers.Long.fromString(upper_tick)
      };
    }
  }
};
exports.AminoConverter = AminoConverter;