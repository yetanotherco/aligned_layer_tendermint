"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MsgWithdrawPositionResponse = exports.MsgWithdrawPosition = exports.MsgCreatePositionResponse = exports.MsgCreatePosition = exports.MsgCollectFeesResponse = exports.MsgCollectFees = void 0;

var _coin = require("../../cosmos/base/v1beta1/coin");

var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));

var _helpers = require("../../helpers");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function createBaseMsgCreatePosition() {
  return {
    poolId: _helpers.Long.UZERO,
    sender: "",
    lowerTick: _helpers.Long.ZERO,
    upperTick: _helpers.Long.ZERO,
    tokenDesired0: undefined,
    tokenDesired1: undefined,
    tokenMinAmount0: "",
    tokenMinAmount1: ""
  };
}

var MsgCreatePosition = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (!message.poolId.isZero()) {
      writer.uint32(8).uint64(message.poolId);
    }

    if (message.sender !== "") {
      writer.uint32(18).string(message.sender);
    }

    if (!message.lowerTick.isZero()) {
      writer.uint32(24).int64(message.lowerTick);
    }

    if (!message.upperTick.isZero()) {
      writer.uint32(32).int64(message.upperTick);
    }

    if (message.tokenDesired0 !== undefined) {
      _coin.Coin.encode(message.tokenDesired0, writer.uint32(42).fork()).ldelim();
    }

    if (message.tokenDesired1 !== undefined) {
      _coin.Coin.encode(message.tokenDesired1, writer.uint32(50).fork()).ldelim();
    }

    if (message.tokenMinAmount0 !== "") {
      writer.uint32(58).string(message.tokenMinAmount0);
    }

    if (message.tokenMinAmount1 !== "") {
      writer.uint32(66).string(message.tokenMinAmount1);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCreatePosition();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.poolId = reader.uint64();
          break;

        case 2:
          message.sender = reader.string();
          break;

        case 3:
          message.lowerTick = reader.int64();
          break;

        case 4:
          message.upperTick = reader.int64();
          break;

        case 5:
          message.tokenDesired0 = _coin.Coin.decode(reader, reader.uint32());
          break;

        case 6:
          message.tokenDesired1 = _coin.Coin.decode(reader, reader.uint32());
          break;

        case 7:
          message.tokenMinAmount0 = reader.string();
          break;

        case 8:
          message.tokenMinAmount1 = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$sender, _object$tokenMinAmoun, _object$tokenMinAmoun2;

    var message = createBaseMsgCreatePosition();
    message.poolId = object.poolId !== undefined && object.poolId !== null ? _helpers.Long.fromValue(object.poolId) : _helpers.Long.UZERO;
    message.sender = (_object$sender = object.sender) !== null && _object$sender !== void 0 ? _object$sender : "";
    message.lowerTick = object.lowerTick !== undefined && object.lowerTick !== null ? _helpers.Long.fromValue(object.lowerTick) : _helpers.Long.ZERO;
    message.upperTick = object.upperTick !== undefined && object.upperTick !== null ? _helpers.Long.fromValue(object.upperTick) : _helpers.Long.ZERO;
    message.tokenDesired0 = object.tokenDesired0 !== undefined && object.tokenDesired0 !== null ? _coin.Coin.fromPartial(object.tokenDesired0) : undefined;
    message.tokenDesired1 = object.tokenDesired1 !== undefined && object.tokenDesired1 !== null ? _coin.Coin.fromPartial(object.tokenDesired1) : undefined;
    message.tokenMinAmount0 = (_object$tokenMinAmoun = object.tokenMinAmount0) !== null && _object$tokenMinAmoun !== void 0 ? _object$tokenMinAmoun : "";
    message.tokenMinAmount1 = (_object$tokenMinAmoun2 = object.tokenMinAmount1) !== null && _object$tokenMinAmoun2 !== void 0 ? _object$tokenMinAmoun2 : "";
    return message;
  }
};
exports.MsgCreatePosition = MsgCreatePosition;

function createBaseMsgCreatePositionResponse() {
  return {
    amount0: "",
    amount1: "",
    liquidityCreated: ""
  };
}

var MsgCreatePositionResponse = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.amount0 !== "") {
      writer.uint32(10).string(message.amount0);
    }

    if (message.amount1 !== "") {
      writer.uint32(18).string(message.amount1);
    }

    if (message.liquidityCreated !== "") {
      writer.uint32(42).string(message.liquidityCreated);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCreatePositionResponse();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.amount0 = reader.string();
          break;

        case 2:
          message.amount1 = reader.string();
          break;

        case 5:
          message.liquidityCreated = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$amount, _object$amount2, _object$liquidityCrea;

    var message = createBaseMsgCreatePositionResponse();
    message.amount0 = (_object$amount = object.amount0) !== null && _object$amount !== void 0 ? _object$amount : "";
    message.amount1 = (_object$amount2 = object.amount1) !== null && _object$amount2 !== void 0 ? _object$amount2 : "";
    message.liquidityCreated = (_object$liquidityCrea = object.liquidityCreated) !== null && _object$liquidityCrea !== void 0 ? _object$liquidityCrea : "";
    return message;
  }
};
exports.MsgCreatePositionResponse = MsgCreatePositionResponse;

function createBaseMsgWithdrawPosition() {
  return {
    poolId: _helpers.Long.UZERO,
    sender: "",
    lowerTick: _helpers.Long.ZERO,
    upperTick: _helpers.Long.ZERO,
    liquidityAmount: ""
  };
}

var MsgWithdrawPosition = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (!message.poolId.isZero()) {
      writer.uint32(8).uint64(message.poolId);
    }

    if (message.sender !== "") {
      writer.uint32(18).string(message.sender);
    }

    if (!message.lowerTick.isZero()) {
      writer.uint32(24).int64(message.lowerTick);
    }

    if (!message.upperTick.isZero()) {
      writer.uint32(32).int64(message.upperTick);
    }

    if (message.liquidityAmount !== "") {
      writer.uint32(42).string(message.liquidityAmount);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgWithdrawPosition();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.poolId = reader.uint64();
          break;

        case 2:
          message.sender = reader.string();
          break;

        case 3:
          message.lowerTick = reader.int64();
          break;

        case 4:
          message.upperTick = reader.int64();
          break;

        case 5:
          message.liquidityAmount = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$sender2, _object$liquidityAmou;

    var message = createBaseMsgWithdrawPosition();
    message.poolId = object.poolId !== undefined && object.poolId !== null ? _helpers.Long.fromValue(object.poolId) : _helpers.Long.UZERO;
    message.sender = (_object$sender2 = object.sender) !== null && _object$sender2 !== void 0 ? _object$sender2 : "";
    message.lowerTick = object.lowerTick !== undefined && object.lowerTick !== null ? _helpers.Long.fromValue(object.lowerTick) : _helpers.Long.ZERO;
    message.upperTick = object.upperTick !== undefined && object.upperTick !== null ? _helpers.Long.fromValue(object.upperTick) : _helpers.Long.ZERO;
    message.liquidityAmount = (_object$liquidityAmou = object.liquidityAmount) !== null && _object$liquidityAmou !== void 0 ? _object$liquidityAmou : "";
    return message;
  }
};
exports.MsgWithdrawPosition = MsgWithdrawPosition;

function createBaseMsgWithdrawPositionResponse() {
  return {
    amount0: "",
    amount1: ""
  };
}

var MsgWithdrawPositionResponse = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.amount0 !== "") {
      writer.uint32(10).string(message.amount0);
    }

    if (message.amount1 !== "") {
      writer.uint32(18).string(message.amount1);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgWithdrawPositionResponse();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.amount0 = reader.string();
          break;

        case 2:
          message.amount1 = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$amount3, _object$amount4;

    var message = createBaseMsgWithdrawPositionResponse();
    message.amount0 = (_object$amount3 = object.amount0) !== null && _object$amount3 !== void 0 ? _object$amount3 : "";
    message.amount1 = (_object$amount4 = object.amount1) !== null && _object$amount4 !== void 0 ? _object$amount4 : "";
    return message;
  }
};
exports.MsgWithdrawPositionResponse = MsgWithdrawPositionResponse;

function createBaseMsgCollectFees() {
  return {
    poolId: _helpers.Long.UZERO,
    sender: "",
    lowerTick: _helpers.Long.ZERO,
    upperTick: _helpers.Long.ZERO
  };
}

var MsgCollectFees = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (!message.poolId.isZero()) {
      writer.uint32(8).uint64(message.poolId);
    }

    if (message.sender !== "") {
      writer.uint32(18).string(message.sender);
    }

    if (!message.lowerTick.isZero()) {
      writer.uint32(24).int64(message.lowerTick);
    }

    if (!message.upperTick.isZero()) {
      writer.uint32(32).int64(message.upperTick);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCollectFees();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.poolId = reader.uint64();
          break;

        case 2:
          message.sender = reader.string();
          break;

        case 3:
          message.lowerTick = reader.int64();
          break;

        case 4:
          message.upperTick = reader.int64();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$sender3;

    var message = createBaseMsgCollectFees();
    message.poolId = object.poolId !== undefined && object.poolId !== null ? _helpers.Long.fromValue(object.poolId) : _helpers.Long.UZERO;
    message.sender = (_object$sender3 = object.sender) !== null && _object$sender3 !== void 0 ? _object$sender3 : "";
    message.lowerTick = object.lowerTick !== undefined && object.lowerTick !== null ? _helpers.Long.fromValue(object.lowerTick) : _helpers.Long.ZERO;
    message.upperTick = object.upperTick !== undefined && object.upperTick !== null ? _helpers.Long.fromValue(object.upperTick) : _helpers.Long.ZERO;
    return message;
  }
};
exports.MsgCollectFees = MsgCollectFees;

function createBaseMsgCollectFeesResponse() {
  return {
    tokenOut: []
  };
}

var MsgCollectFeesResponse = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    var _iterator = _createForOfIteratorHelper(message.tokenOut),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var v = _step.value;

        _coin.Coin.encode(v, writer.uint32(10).fork()).ldelim();
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseMsgCollectFeesResponse();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.tokenOut.push(_coin.Coin.decode(reader, reader.uint32()));
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$tokenOut;

    var message = createBaseMsgCollectFeesResponse();
    message.tokenOut = ((_object$tokenOut = object.tokenOut) === null || _object$tokenOut === void 0 ? void 0 : _object$tokenOut.map(function (e) {
      return _coin.Coin.fromPartial(e);
    })) || [];
    return message;
  }
};
exports.MsgCollectFeesResponse = MsgCollectFeesResponse;