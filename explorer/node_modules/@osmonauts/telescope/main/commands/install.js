"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _path = require("path");
var _mkdirp = require("mkdirp");
var _glob = require("glob");
var _rimraf = require("rimraf");
var _shelljs = require("shelljs");
var _prompt = require("../prompt");
var _parsePackageName = require("parse-package-name");
var _os = require("os");
var _fs = require("fs");
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
var TMPDIR = (0, _os.tmpdir)();
var rnd = function rnd() {
  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);
};
var getPackages = function getPackages(names) {
  return names.map(function (pkg) {
    var _parse = (0, _parsePackageName.parse)(pkg),
      name = _parse.name,
      version = _parse.version;
    return "".concat(name, "@").concat(version);
  }).join(' ');
};
var _default = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(argv) {
    var _packageInfo$dependen, _thisPackage$devDepen;
    var cur, thisPackage, _yield$prompt, pkg, tmp, pkgs, cmds, _iterator, _step, _step$value, src, dst, _pkg, packageInfo, deps;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            // don't prompt if we got this...
            if (argv._.length) {
              argv.pkg = argv._;
            }

            // current dir/package
            cur = process.cwd();
            _context.prev = 2;
            thisPackage = JSON.parse((0, _fs.readFileSync)((0, _path.join)(cur, 'package.json'), 'utf-8'));
            _context.next = 9;
            break;
          case 6:
            _context.prev = 6;
            _context.t0 = _context["catch"](2);
            throw new Error('make sure you are inside of a telescope package!');
          case 9:
            _context.next = 11;
            return (0, _prompt.prompt)([{
              type: 'checkbox',
              name: 'pkg',
              message: 'which packages do you want to support?',
              choices: ['akash',
              // 'axelar',
              'bcna',
              // 'bitsong', // Error: namespace and package not supported, yet.
              // 'canto',
              // 'cht',
              'comdex', 'confio', 'cosmos', 'cosmos_proto', 'cosmwasm',
              // 'cronos',
              // 'cyber',
              // 'desmos',
              // 'echelon',
              // 'em',
              // 'eve',
              // 'evmos',
              // 'galaxy',
              'gogoproto', 'google', 'ibc', 'injective', 'juno',
              // 'kava',
              // 'likechain',
              // 'lumenx',
              'omniflix',
              // 'oracle',
              'osmosis',
              // 'panacea',
              'passage3d', 'persistence',
              // 'provenance',
              // 'pylons',
              'regen',
              // 'scavenge',
              // 'sentinel',
              // 'shentu',
              // 'sifnode',
              'stargaze', 'tendermint', 'umee'
              // 'uptake',
              // 'vidulum',
              ].map(function (name) {
                return {
                  name: name,
                  value: "@protobufs/".concat(name)
                };
              })
            }], argv);
          case 11:
            _yield$prompt = _context.sent;
            pkg = _yield$prompt.pkg;
            // install
            if (!Array.isArray(pkg)) pkg = [pkg];
            tmp = (0, _path.join)(TMPDIR, rnd());
            (0, _mkdirp.sync)(tmp);
            process.chdir(tmp);
            (0, _shelljs.exec)("npm install ".concat(getPackages(pkg), " --production --prefix ./protobufs"));

            // protos
            pkgs = (0, _glob.sync)('./protobufs/**/package.json');
            cmds = pkgs.filter(function (f) {
              return f !== './protobufs/package.json';
            }).map(function (f) {
              return (0, _path.resolve)((0, _path.join)(tmp, f));
            }).map(function (conf) {
              var extDir = (0, _path.dirname)(conf);
              var dir = extDir.split('node_modules/')[1];
              var dst = (0, _path.basename)(dir);
              var files = (0, _glob.sync)("".concat(extDir, "/**/*"), {
                nodir: true
              });
              files.forEach(function (f) {
                if ((0, _path.extname)(f) === '.proto' || f === 'package.json' || /license/i.test(f) || /readme/i.test(f)) return;
                (0, _rimraf.sync)(f);
              });
              return [extDir, (0, _path.resolve)((0, _path.join)(cur, 'proto', dst)), dir];
            }); // move protos 
            _iterator = _createForOfIteratorHelper(cmds);
            try {
              for (_iterator.s(); !(_step = _iterator.n()).done;) {
                _step$value = (0, _slicedToArray2["default"])(_step.value, 3), src = _step$value[0], dst = _step$value[1], _pkg = _step$value[2];
                (0, _rimraf.sync)(dst);
                console.log("installing ".concat(_pkg, "..."));
                (0, _mkdirp.sync)((0, _path.dirname)(dst));
                (0, _shelljs.exec)("mv ".concat(src, " ").concat(dst));
              }

              // package
            } catch (err) {
              _iterator.e(err);
            } finally {
              _iterator.f();
            }
            packageInfo = JSON.parse((0, _fs.readFileSync)('./protobufs/package.json', 'utf-8'));
            deps = (_packageInfo$dependen = packageInfo.dependencies) !== null && _packageInfo$dependen !== void 0 ? _packageInfo$dependen : {};
            thisPackage.devDependencies = (_thisPackage$devDepen = thisPackage.devDependencies) !== null && _thisPackage$devDepen !== void 0 ? _thisPackage$devDepen : {};
            thisPackage.devDependencies = _objectSpread(_objectSpread({}, thisPackage.devDependencies), deps);
            thisPackage.devDependencies = Object.fromEntries(Object.entries(thisPackage.devDependencies).sort());
            (0, _fs.writeFileSync)((0, _path.join)(cur, 'package.json'), JSON.stringify(thisPackage, null, 2));

            // cleanup
            (0, _rimraf.sync)(tmp);
            process.chdir(cur);
          case 30:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[2, 6]]);
  }));
  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();
exports["default"] = _default;