"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.plugin = void 0;
var _path = require("path");
var _mkdirp = require("mkdirp");
var _package = _interopRequireDefault(require("../../package.json"));
var _files = require("../utils/files");
var _helpers = require("../helpers");
var version = process.env.NODE_ENV === 'test' ? 'latest' : _package["default"].version;
var header = "/**\n* This file and any referenced files were automatically generated by ".concat(_package["default"].name, "@").concat(version, "\n* DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain\n* and run the transpile command or yarn proto command to regenerate this bundle.\n*/\n\n");
var write = function write(builder, indexFile, content) {
  var indexOutFile = (0, _path.join)(builder.outPath, indexFile);
  (0, _mkdirp.sync)((0, _path.dirname)(indexOutFile));
  (0, _files.writeContentToFile)(builder.outPath, builder.options, header + content, indexOutFile);
};
var plugin = function plugin(builder) {
  var _builder$options$reac, _builder$options$reac2, _builder$options$mobx, _builder$options$pini, _builder$options$rpcC, _builder$options$rpcC2;
  write(builder, 'helpers.ts', _helpers.internal);

  // should be exported
  if (builder.options.includeExternalHelpers || (_builder$options$reac = builder.options.reactQuery) !== null && _builder$options$reac !== void 0 && _builder$options$reac.enabled) {
    // also react-query needs these...
    builder.files.push('extern.ts');
    write(builder, 'extern.ts', _helpers.external);
  }
  if ((_builder$options$reac2 = builder.options.reactQuery) !== null && _builder$options$reac2 !== void 0 && _builder$options$reac2.enabled) {
    builder.files.push('react-query.ts');
    write(builder, 'react-query.ts', _helpers.reactQuery);
  }
  if ((_builder$options$mobx = builder.options.mobx) !== null && _builder$options$mobx !== void 0 && _builder$options$mobx.enabled) {
    builder.files.push('mobx.ts');
    write(builder, 'mobx.ts', _helpers.mobx);
  }
  if ((_builder$options$pini = builder.options.pinia) !== null && _builder$options$pini !== void 0 && _builder$options$pini.enabled) {
    builder.files.push('pinia-endpoint.ts');
    write(builder, 'pinia-endpoint.ts', _helpers.pinia);
  }
  if (((_builder$options$rpcC = builder.options.rpcClients) === null || _builder$options$rpcC === void 0 ? void 0 : _builder$options$rpcC.type) === 'grpc-gateway') {
    builder.files.push('grpc-gateway.ts');
    write(builder, 'grpc-gateway.ts', _helpers.grpcGateway);
  }
  if (((_builder$options$rpcC2 = builder.options.rpcClients) === null || _builder$options$rpcC2 === void 0 ? void 0 : _builder$options$rpcC2.type) === 'grpc-web') {
    builder.files.push('grpc-web.ts');
    write(builder, 'grpc-web.ts', _helpers.grpcWeb);
  }
};
exports.plugin = plugin;