"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.plugin = void 0;
var _utils = require("../utils");
var _path = require("path");
var _mkdirp = require("mkdirp");
var t = _interopRequireWildcard(require("@babel/types"));
var _generator = _interopRequireDefault(require("@babel/generator"));
var _package = _interopRequireDefault(require("../../package.json"));
var _files = require("../utils/files");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var version = process.env.NODE_ENV === 'test' ? 'latest' : _package["default"].version;
var plugin = function plugin(builder) {
  if (!builder.options.bundle.enabled) {
    return;
  }

  // finally, write one index file with all files, exported
  var indexFile = 'index.ts';
  var indexOutFile = (0, _path.join)(builder.outPath, indexFile);
  var stmts = builder.files.map(function (file) {
    return t.exportAllDeclaration(t.stringLiteral((0, _utils.getRelativePath)(indexFile, file)));
  });
  var finalAst = t.program(stmts);
  var indexContent = (0, _generator["default"])(finalAst).code;
  (0, _mkdirp.sync)((0, _path.dirname)(indexOutFile));
  var header = "/**\n  * This file and any referenced files were automatically generated by ".concat(_package["default"].name, "@").concat(version, "\n  * DO NOT MODIFY BY HAND. Instead, download the latest proto files for your chain\n  * and run the transpile command or yarn proto command to regenerate this bundle.\n  */\n \n");
  (0, _files.writeContentToFile)(builder.outPath, builder.options, header + indexContent, indexOutFile);
};
exports.plugin = plugin;