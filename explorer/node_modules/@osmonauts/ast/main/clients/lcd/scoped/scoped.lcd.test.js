"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _testUtils = require("../../../../test-utils");
var _scoped = require("./scoped");
it('lcdRecursiveObjectProps', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
  return _regenerator["default"].wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          (0, _testUtils.expectCode)((0, _scoped.lcdRecursiveObjectProps)(['cosmos', 'bank', 'v1beta1']));
        case 1:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
})));
it('createScopedLCDFactory', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
  var context;
  return _regenerator["default"].wrap(function _callee2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          context = (0, _testUtils.getGenericParseContext)();
          (0, _testUtils.expectCode)((0, _scoped.createScopedLCDFactory)(context, {
            cosmos: {
              bank: {
                v1beta1: "./proto/cosmos/bank/v1beta1/query.lcd"
              },
              gov: {
                v1beta1: "./proto/cosmos/bank/v1beta1/query.lcd"
              }
            },
            osmosis: {
              gamm: {
                v1beta1: "./proto/cosmos/bank/v1beta1/query.lcd"
              }
            }
          }, 'lcd', 'LCDQueryClient'));
        case 2:
        case "end":
          return _context2.stop();
      }
    }
  }, _callee2);
})));