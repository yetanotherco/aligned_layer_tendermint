"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initRequest = exports.getInitReqProperties = void 0;
var _utils = require("../../../../../utils");
var t = _interopRequireWildcard(require("@babel/types"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
// initRequest is used in constructing GRPC-Gateway methods
// It is a second parameter in method signature.
// ex: static Send(req: MsgSend, initReq?: fm.InitReq)
// always the same, hence, declared outside of grpcGatewayMethodDefinition
var initRequest = (0, _utils.identifier)('initRequest', t.tSTypeAnnotation(t.tsTypeReference(t.tsQualifiedName(t.identifier('fm'), t.identifier('InitReq')))), true);

// initReqProperties contains information for initReq parameter in fetchReq arguments
exports.initRequest = initRequest;
var getInitReqProperties = function getInitReqProperties() {
  var initReqProperties = [];

  // <...initReq>
  var argSpreadInit = t.spreadElement(t.identifier('initRequest'));

  // <method: 'POST'>
  var argPOST = t.objectProperty(t.identifier('method'), t.stringLiteral('POST'), false, false);

  // <JSON.stringify(req, fm.replacer)>
  var argBody = t.objectProperty(t.identifier('body'), t.callExpression(t.memberExpression(t.identifier('JSON'), t.identifier('stringify'), false), [t.identifier('request'), t.memberExpression(t.identifier('fm'), t.identifier('replacer'), false)]));
  initReqProperties.push(argSpreadInit, argPOST, argBody);
  return initReqProperties;
};
exports.getInitReqProperties = getInitReqProperties;