"use strict";

var _protoParser = require("@osmonauts/proto-parser");
var _types = require("@osmonauts/types");
var _testUtils = require("../../../test-utils/");
var _context = require("../context");
var _index = require("../amino/index");
var store = (0, _testUtils.getTestProtoStore)();
store.traverseAll();
describe('cosmwasm/wasm/v1/tx', function () {
  var ref = store.findProto('cosmwasm/wasm/v1/tx.proto');
  var context = new _context.ProtoParseContext(ref, store, _types.defaultTelescopeOptions);
  var aminoCtx = new _context.AminoParseContext(ref, store, _types.defaultTelescopeOptions);
  context.options.prototypes.typingsFormat.timestamp = 'date';
  aminoCtx.options.prototypes.typingsFormat.timestamp = 'date';
  it('MsgExecuteContract', function () {
    (0, _testUtils.expectCode)((0, _index.createAminoConverter)({
      context: aminoCtx,
      root: ref.proto,
      name: 'AminoConverter',
      protos: [(0, _protoParser.getNestedProto)(ref.traversed).MsgExecuteContract]
    }));
  });
  it('MsgInstantiateContract', function () {
    (0, _testUtils.expectCode)((0, _index.createAminoConverter)({
      context: aminoCtx,
      root: ref.proto,
      name: 'AminoConverter',
      protos: [(0, _protoParser.getNestedProto)(ref.traversed).MsgInstantiateContract]
    }));
  });
  it('MsgStoreCode', function () {
    (0, _testUtils.expectCode)((0, _index.createAminoConverter)({
      context: aminoCtx,
      root: ref.proto,
      name: 'AminoConverter',
      protos: [(0, _protoParser.getNestedProto)(ref.traversed).MsgStoreCode]
    }));
  });
  it('MsgMigrateContract', function () {
    (0, _testUtils.expectCode)((0, _index.createAminoConverter)({
      context: aminoCtx,
      root: ref.proto,
      name: 'AminoConverter',
      protos: [(0, _protoParser.getNestedProto)(ref.traversed).MsgMigrateContract]
    }));
  });
});