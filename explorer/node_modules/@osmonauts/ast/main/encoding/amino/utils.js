"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.protoFieldsToArray = exports.getTypeUrlWithPkgAndName = exports.getTypeUrl = exports.getAminoTypeName = exports.arrayTypeNDim = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var t = _interopRequireWildcard(require("@babel/types"));
var _types2 = require("@osmonauts/types");
var _case = require("case");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var getTypeUrlWithPkgAndName = function getTypeUrlWithPkgAndName(pkg, name) {
  return "/".concat(pkg, ".").concat(name);
};
exports.getTypeUrlWithPkgAndName = getTypeUrlWithPkgAndName;
var getTypeUrl = function getTypeUrl(root, proto) {
  if (!proto.name) return;
  return getTypeUrlWithPkgAndName(root["package"], proto.name);
};
exports.getTypeUrl = getTypeUrl;
var arrayTypeNDim = function arrayTypeNDim(body, n) {
  if (!n || n <= 1) return t.tsArrayType(body);
  return t.tsArrayType(arrayTypeNDim(body, n - 1));
};
exports.arrayTypeNDim = arrayTypeNDim;
var getAminoTypeName = function getAminoTypeName(context, root, proto) {
  var _proto$options, _context$options$amin, _exceptionsToCheck$ty;
  if ((_proto$options = proto.options) !== null && _proto$options !== void 0 && _proto$options['(amino.name)']) {
    return proto.options['(amino.name)'];
  }
  if (!proto.name) {
    // seems to only happen for 
    //  SourceInfo_PositionsEntry  (in hash map inside google.api.expr.v1beta1)
    return;
  }
  var typeUrl = getTypeUrl(root, proto);
  var exceptionsToCheck = _objectSpread(_objectSpread({}, (_context$options$amin = context.options.aminoEncoding.exceptions) !== null && _context$options$amin !== void 0 ? _context$options$amin : {}), _types2.DEFAULT_AMINO_EXCEPTIONS);
  var exceptionAminoName = exceptionsToCheck === null || exceptionsToCheck === void 0 ? void 0 : (_exceptionsToCheck$ty = exceptionsToCheck[typeUrl]) === null || _exceptionsToCheck$ty === void 0 ? void 0 : _exceptionsToCheck$ty.aminoType;
  if (exceptionAminoName) return exceptionAminoName;
  var modTypeUrlToAmino = context.pluginValue('aminoEncoding.typeUrlToAmino');
  if (typeof modTypeUrlToAmino === 'function') {
    var result = modTypeUrlToAmino(typeUrl);
    if (result) return result;
  }
  var name = typeUrl.replace(/^\//, '');
  var elements = name.split('.');
  var pkg = elements[0];
  var TypeName = elements[elements.length - 1];
  switch (pkg) {
    case 'cosmos':
      switch (context.ref.proto["package"]) {
        case 'cosmos.gov.v1':
          if (TypeName == 'MsgUpdateParams') return "cosmos-sdk/x/gov/v1/".concat(TypeName);
          return "cosmos-sdk/v1/".concat(TypeName);
      }
    case 'ibc':
      return "cosmos-sdk/".concat(TypeName);
    case 'cosmwasm':
      return "wasm/".concat(TypeName);
    case 'osmosis':
      {
        if (/poolmodels/.test(typeUrl) && /stableswap/.test(typeUrl)) {
          var _n = elements.filter(function (a) {
            return a !== 'v1beta1';
          }).filter(function (a) {
            return a !== 'poolmodels';
          }).filter(function (a) {
            return a !== 'stableswap';
          });
          _n[_n.length - 1] = (0, _case.kebab)(_n[_n.length - 1]);
          _n[_n.length - 1] = _n[_n.length - 1].replace(/^msg-/, '');
          return _n.join('/');
        }
        if (/superfluid/.test(typeUrl)) {
          switch (typeUrl) {
            case '/osmosis.superfluid.MsgUnPoolWhitelistedPool':
              return 'osmosis/unpool-whitelisted-pool';
          }
          var _n2 = elements.filter(function (a) {
            return a !== 'superfluid';
          });
          _n2[_n2.length - 1] = (0, _case.kebab)(_n2[_n2.length - 1]);
          _n2[_n2.length - 1] = _n2[_n2.length - 1].replace(/^msg-/, '');
          return _n2.join('/');
        }
        if (/lockup/.test(typeUrl)) {
          switch (typeUrl) {
            case '/osmosis.lockup.MsgLockTokens':
              return 'osmosis/lockup/lock-tokens';
            case '/osmosis.lockup.MsgBeginUnlockingAll':
              return 'osmosis/lockup/begin-unlock-tokens';
            case '/osmosis.lockup.MsgBeginUnlocking':
              return 'osmosis/lockup/begin-unlock-period-lock';
          }
        }
        var n = elements.filter(function (a) {
          return !a.match(/v1beta1/);
        });
        n[n.length - 1] = (0, _case.kebab)(n[n.length - 1]);
        n[n.length - 1] = n[n.length - 1].replace(/^msg-/, '');
        return n.join('/');
      }
    default:
      return typeUrl;
  }
};
exports.getAminoTypeName = getAminoTypeName;
var protoFieldsToArray = function protoFieldsToArray(proto) {
  return Object.keys(proto.fields).map(function (name) {
    return _objectSpread({
      name: name
    }, proto.fields[name]);
  });
};
exports.protoFieldsToArray = protoFieldsToArray;