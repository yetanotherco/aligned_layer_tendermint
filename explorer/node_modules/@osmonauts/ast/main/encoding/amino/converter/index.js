"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createAminoConverterItem = exports.createAminoConverter = void 0;
var t = _interopRequireWildcard(require("@babel/types"));
var _toAminoJson = require("../to-amino-json");
var _fromAminoJson = require("../from-amino-json");
var _utils = require("../utils");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var createAminoConverterItem = function createAminoConverterItem(_ref) {
  var root = _ref.root,
    context = _ref.context,
    proto = _ref.proto;
  var typeUrl = (0, _utils.getTypeUrl)(root, proto);
  var aminoType = (0, _utils.getAminoTypeName)(context, root, proto);
  var toAmino = context.options.aminoEncoding.useRecursiveV2encoding ? t.memberExpression(t.identifier(proto.name), t.identifier('toAmino')) : (0, _toAminoJson.toAminoJsonMethod)({
    context: context,
    proto: proto
  });
  var fromAmino = context.options.aminoEncoding.useRecursiveV2encoding ? t.memberExpression(t.identifier(proto.name), t.identifier('fromAmino')) : (0, _fromAminoJson.fromAminoJsonMethod)({
    context: context,
    proto: proto
  });
  return t.objectProperty(t.stringLiteral(typeUrl), t.objectExpression([t.objectProperty(t.identifier('aminoType'), t.stringLiteral(aminoType)), t.objectProperty(t.identifier('toAmino'), toAmino), t.objectProperty(t.identifier('fromAmino'), fromAmino)]));
};
exports.createAminoConverterItem = createAminoConverterItem;
var createAminoConverter = function createAminoConverter(_ref2) {
  var name = _ref2.name,
    root = _ref2.root,
    context = _ref2.context,
    protos = _ref2.protos;
  var items = protos.map(function (proto) {
    return createAminoConverterItem({
      context: context,
      root: root,
      proto: proto
    });
  });
  return t.exportNamedDeclaration(t.variableDeclaration('const', [t.variableDeclarator(t.identifier(name), t.objectExpression(items))]));
};
exports.createAminoConverter = createAminoConverter;