"use strict";

var _index = require("./index");
var _case = require("case");
var _utils = require("@osmonauts/utils");
var _testUtils = require("../../../../test-utils");
var store = (0, _testUtils.getTestProtoStore)();
store.traverseAll();
describe('osmosis/gamm/v1beta1/tx', function () {
  var _prepareContext = (0, _testUtils.prepareContext)(store, 'osmosis/gamm/v1beta1/tx.proto'),
    context = _prepareContext.context,
    protos = _prepareContext.protos,
    root = _prepareContext.root;
  it('AminoConverter', function () {
    context.options.aminoEncoding.casingFn = _utils.camel;
    (0, _testUtils.expectCode)((0, _index.createAminoConverter)({
      context: context,
      root: root,
      name: 'AminoConverter',
      protos: protos
    }));
  });
});
describe('cosmos/staking/v1beta1/tx', function () {
  var _prepareContext2 = (0, _testUtils.prepareContext)(store, 'cosmos/staking/v1beta1/tx.proto'),
    context = _prepareContext2.context,
    protos = _prepareContext2.protos,
    root = _prepareContext2.root;
  it('AminoConverter', function () {
    context.options.aminoEncoding.casingFn = _case.snake;
    (0, _testUtils.expectCode)((0, _index.createAminoConverter)({
      context: context,
      root: root,
      name: 'AminoConverter',
      protos: protos
    }));
  });
});
describe('evmos/fees/v1/tx', function () {
  var _prepareContext3 = (0, _testUtils.prepareContext)(store, 'evmos/fees/v1/tx.proto'),
    context = _prepareContext3.context,
    protos = _prepareContext3.protos,
    root = _prepareContext3.root;
  it('AminoConverter', function () {
    context.options.aminoEncoding.casingFn = _case.snake;
    (0, _testUtils.expectCode)((0, _index.createAminoConverter)({
      context: context,
      root: root,
      name: 'AminoConverter',
      protos: protos
    }));
  });
});