"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _interface = require("./interface");
var _protoParser = require("@osmonauts/proto-parser");
var _context5 = require("../context");
var _testUtils = require("../../../test-utils");
describe('Cast', function () {
  var implementsStore = (0, _testUtils.getTestProtoStore)();
  implementsStore.options.aminoEncoding.useRecursiveV2encoding = true;
  implementsStore.options.prototypes.addTypeUrlToDecoders = true;
  implementsStore.options.interfaces.enabled = true;
  implementsStore.traverseAll();
  it('standard', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
    var ref, context;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            ref = implementsStore.findProto('osmosis/gamm/v1beta1/query.proto');
            context = new _context5.ProtoParseContext(ref, implementsStore, implementsStore.options); // printCode(createProtoType(context, 'QueryPoolResponse', getNestedProto(ref.traversed).QueryPoolResponse));
            (0, _testUtils.expectCode)((0, _interface.createProtoType)(context, 'QueryPoolResponse', (0, _protoParser.getNestedProto)(ref.traversed).QueryPoolResponse));
          case 3:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
  it('repeated', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
    var ref, context;
    return _regenerator["default"].wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            ref = implementsStore.findProto('osmosis/gamm/v1beta1/query.proto');
            context = new _context5.ProtoParseContext(ref, implementsStore, implementsStore.options); // printCode(createProtoType(context, 'QueryPoolsResponse', getNestedProto(ref.traversed).QueryPoolsResponse));
            (0, _testUtils.expectCode)((0, _interface.createProtoType)(context, 'QueryPoolsResponse', (0, _protoParser.getNestedProto)(ref.traversed).QueryPoolsResponse));
          case 3:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  })));
});
describe('Any', function () {
  var standardStore = (0, _testUtils.getTestProtoStore)();
  standardStore.options.aminoEncoding.useRecursiveV2encoding = false;
  standardStore.options.prototypes.addTypeUrlToDecoders = false;
  standardStore.options.interfaces.enabled = false;
  standardStore.traverseAll();
  it('standard', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3() {
    var ref, context;
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            ref = standardStore.findProto('osmosis/gamm/v1beta1/query.proto');
            context = new _context5.ProtoParseContext(ref, standardStore, standardStore.options); // printCode(createProtoType(context, 'QueryPoolResponse', getNestedProto(ref.traversed).QueryPoolResponse));
            (0, _testUtils.expectCode)((0, _interface.createProtoType)(context, 'QueryPoolResponse', (0, _protoParser.getNestedProto)(ref.traversed).QueryPoolResponse));
          case 3:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  })));
  it('repeated', /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee4() {
    var ref, context;
    return _regenerator["default"].wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            ref = standardStore.findProto('osmosis/gamm/v1beta1/query.proto');
            context = new _context5.ProtoParseContext(ref, standardStore, standardStore.options); // printCode(createProtoType(context, 'QueryPoolsResponse', getNestedProto(ref.traversed).QueryPoolsResponse));
            (0, _testUtils.expectCode)((0, _interface.createProtoType)(context, 'QueryPoolsResponse', (0, _protoParser.getNestedProto)(ref.traversed).QueryPoolsResponse));
          case 3:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  })));
});