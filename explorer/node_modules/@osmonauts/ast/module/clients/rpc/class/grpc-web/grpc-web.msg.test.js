import { traverse, getNestedProto } from '@osmonauts/proto-parser';
import { expectCode, getTestProtoStore } from '../../../../../test-utils';
import { GenericParseContext } from '../../../../encoding';
import { createGrpcWebMsgInterface, createGrpcWebMsgClass, GetDesc, getMethodDesc, getGrpcWebImpl } from './grpc-web.msg';
const store = getTestProtoStore();
store.traverseAll();
it('test gRPC-web Msg Client', () => {
  const ref = store.findProto('cosmos/authz/v1beta1/tx.proto');
  const res = traverse(store, ref);
  const service = getNestedProto(res).Msg;
  const context = new GenericParseContext(ref, store, store.options);
  expectCode(createGrpcWebMsgInterface(context, service));
  expectCode(createGrpcWebMsgClass(context, service));
  expectCode(GetDesc(context, service));
  const Desces = getMethodDesc(context, service);
  for (let i = 0; i < Desces.length; i++) {
    const element = Desces[i];
    expectCode(element);
  }
  expectCode(getGrpcWebImpl(context));
});